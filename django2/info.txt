Configurar Virtual Env
python -m venv <nome da virtual env>

Instalar django com bootstrap e outros (veja parametros)
pip install django whitenoise gunicorn django-bootstrpa4 PyMySQL django-stdimage

Upgrade Pip (Python)
python -m pip install --upgrade pip

Instalar biblioteca MySQL para o Python
Ubuntu
sudo apt-get install libmysqlclient-dev python3-dev

Mac
brew install mysql-connector-c

Windows
Se servidor MySQL está instalado, bibliotecas
já devem estar instaladas

criar projeto (para não criar estrutura use o . (ponto) apos o nome do projeto ( raiz do projeto ))
django-admin startproject <nome do project>

criar app (deve-se estar dentro da pasta do projeto)
django-admin startapp <nome do app>

Configurar Settings
INSTALLED_APPS = [
    #Deve ter todas as aplicacoes
    #no caso de bootstrap colocar
    <sua(s) aplicacao(oes)>
    'bootstrap4',
    'stdimage',
]

MIDDLEWARE = [
    #Para trabalhar com WhiteNoise, na segunda linha coloque
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

TEMPLATES = [
    'DIRS': ['templates']
]

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
# SqlLite
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# MySQL
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'database_name',
        'USER': 'user',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# PostgreSQL com Heroku
DATABASES = {
    'default': dj_database_url.config()
}

# Install local (MySql) para usar configuração no Heroku
pip install dj_database_url psycopg2-binary

# Gerar requirements
pip freeze > requirements.txt


# user: root
# password: Admin123

# DJANGO usando crispy
pip install django-crispy-forms


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # usado durante a produção

# Direcionar quando logout na pagina admin do Django
LOGOUT_REDIRECT_URL = 'index'

#Configuracoes de e-mail - Simular email server
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

#Provavel configuracao de um servidor de e-mail (ver configuração do servidor)

'''
EMAIL_HOST = 'localhost'
EMAIL_HOST_USER = 'no-replay@dominio.com.br'
EMAIL_PORT = 587
EMAIL_HOST_TSL = True
EMAIL_HOST_PASSWORD = 'password'
'''

# https://colorlib.com/preview/#photon

GIT:
git init

git remote add origin git@github.com:xxxxxxxxx/yyyyyyyyyy.git

git add .
git commit - m

git push -u origin master



